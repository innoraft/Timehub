<?php

/**
 * @file attach_view.module file.
 */

/**
 * @desc implements hook_node_access().
 * @return constant.
 */
function attach_view_node_access($node, $op, $account) {
  global $user;
  $url=request_path();
  
  // Project Manager not able to edit 'timesheet_entry' which invoiced.
  if($op == 'update' && $node->type == 'timesheet_entry') {
    if(in_array('Project Manager', $user->roles)) {
      if(isset($node->field_invoice[$node->language][0]['value'])) {
        if($node->field_invoice[$node->language][0]['value'] == 'Invoice') {
          return NODE_ACCESS_DENY;
        }
      }
    }
  }
  
  // Developer not able to edit 'timesheet_entry' which approved.
  if($op == 'update' && $node->type == 'timesheet_entry') {
    if($url == 'timesheet-dev') {
      if(in_array('Developer', $user->roles)) {
        if(isset($node->field_approvednot_approved[$node->language][0]['value'])) {
          if($node->field_approvednot_approved[$node->language][0]['value'] == 'Approved') {
            return NODE_ACCESS_DENY;
          }
        }
      }
    }
  }
} 

/**
 * @desc After submit 'timesheet_entry', view display based on current user.
 * @param $node.
 */
function attach_view_node_insert($node) {
  global $user;
  global $base_url;
  if ($node->type == 'timesheet_entry') {
    if (in_array('Project Manager', $user->roles)) {
      drupal_goto($base_url . "/timesheet-pm");
    }
    elseif (in_array('Developer', $user->roles)) {
      drupal_goto($base_url . "/timesheet-dev");
    }  
  }
}

/**
 * @desc implements hook_form_alter().
 * @param $form.
 * @param $form_state.
 * @param $form_id.
 * @return.
 */
function  attach_view_form_alter(&$form,&$form_state,$form_id) {
  global $user; 

  if($form_id == 'timesheet_entry_node_form') {
    $form['field_work_hour'][$form['language']['#value']][0]['value']['#description'] = 'Format: H:i';
   
    $flag1 = 0;
    $flag2 = 0;
    $role1 = NULL;
    // Check role of current user.
    foreach ($user->roles as $value) {
      if($value == 'Developer'){
        $role1 = 'Developer';
        $flag1 = 1;
      } elseif ($value == 'Project Manager') {
        $role1 = 'Project Manager';
        $flag2 = 1;
      }
      
      if($flag1 == 1 && $flag2 == 1){
        $role1 = 'Dev-PM';
      }
    }
    
    // Check timesheet entry form is for add the timesheet entry.
    if($form['nid']['#value'] == NULL){
      if($role1 == 'Project Manager'){
        $query1 = db_select('field_data_field_project_manager', 'pn');
        $query1->fields('pn', array('entity_id', 'field_project_manager_target_id'));
        $query1->condition('pn.field_project_manager_target_id', $user->uid, '=');
        
        $result2 = $query1->execute()->fetchAll();
      } elseif ($role1 == 'Developer') {
        $query2 = db_select('field_data_field_developer', 'd');
        $query2->fields('d', array('entity_id', 'field_developer_target_id'));
        $query2->condition('d.field_developer_target_id', $user->uid, '=');
        
        $result2 = $query2->execute()->fetchAll();
      } elseif ($role1 == 'Dev-PM') {
        $query1 = db_select('field_data_field_project_manager', 'pn');
        $query1->fields('pn', array('entity_id', 'field_project_manager_target_id'));
        $query1->condition('pn.field_project_manager_target_id', $user->uid, '=');
      
        $query2 = db_select('field_data_field_developer', 'd');
        $query2->fields('d', array('entity_id', 'field_developer_target_id'));
        $query2->condition('d.field_developer_target_id', $user->uid, '=');
      
        $result2 = $query1->union($query2)->execute()->fetchAll();
      }             
  
      // Remove project name from select list that not alloted to user.
      if (!empty($result2)) {
        foreach ($result2 as $nid) {
          $values[] = $nid->entity_id;
        }
        foreach ($form['field_project_name'][$form['language']['#value']]['#options'] as $key => $value) {
          if(!in_array($key, $values)) {
            unset($form['field_project_name'][$form['language']['#value']]['#options'][$key]);
          }
        }
      }
      else {
          foreach ($form['field_project_name'][$form['language']['#value']]['#options'] as $i => $value) {
            unset($form['field_project_name'][$form['language']['#value']]['#options'][$i]);
          }
      } // Check timesheet entry form is for edit the timesheet entry.
    } elseif ($form['nid']['#value'] != NULL) {
         $node1 = node_load($form['nid']['#value']);
         $user1 = user_load($node1->uid);
           
         $flag3 = 0;
         $flag4 = 0;
         $role2 = NULL;
         // Check role of user whose content to be edit.
         foreach ($user1->roles as $value) {
          if($value == 'Developer'){
            $role2 = 'Developer';
            $flag3 = 1;
          } else if ($value == 'Project Manager') {
            $role2 = 'Project Manager';
            $flag4 = 1;
          }
      
          if($flag3 == 1 && $flag4 == 1){
            $role2 = 'Dev-PM';
          }
        }
          
        if($role2 == 'Project Manager'){
          $query1 = db_select('field_data_field_project_manager', 'pn');
          $query1->fields('pn', array('entity_id', 'field_project_manager_target_id'));
          $query1->condition('pn.field_project_manager_target_id', $node1->uid, '=');
        
          $result2 = $query1->execute()->fetchAll();
        } elseif ($role2 == 'Developer') {
          $query2 = db_select('field_data_field_developer', 'd');
          $query2->fields('d', array('entity_id', 'field_developer_target_id'));
          $query2->condition('d.field_developer_target_id', $node1->uid, '=');
        
          $result2 = $query2->execute()->fetchAll();
        } elseif ($role2 == 'Dev-PM') {
          $query1 = db_select('field_data_field_project_manager', 'pn');
          $query1->fields('pn', array('entity_id', 'field_project_manager_target_id'));
          $query1->condition('pn.field_project_manager_target_id', $node1->uid, '=');
      
          $query2 = db_select('field_data_field_developer', 'd');
          $query2->fields('d', array('entity_id', 'field_developer_target_id'));
          $query2->condition('d.field_developer_target_id', $node1->uid, '=');
      
          $result2 = $query1->union($query2)->execute()->fetchAll();
        } 
     
        // Remove project name from select list that not alloted to user.
        if (!empty($result2)) {
          foreach ($result2 as $nid) {
            $values[] = $nid->entity_id;
          }
          foreach ($form['field_project_name'][$form['language']['#value']]['#options'] as $key => $value) {
            if(!in_array($key, $values)) {
              unset($form['field_project_name'][$form['language']['#value']]['#options'][$key]);
            }
          }
        }
    }
      
    if($role1 == 'Developer'){
      $form['field_approvednot_approved']['#access'] = FALSE;
      $form['field_invoice']['#access'] = FALSE;
    } elseif ($role1 == 'Project Manager') {
      $form['field_invoice']['#access'] = FALSE;
    } elseif ($role1 == 'Dev-PM') {
      $form['field_invoice']['#access'] = FALSE;
    }
  }
  
  if($form_id == 'views_exposed_form') {
    // Only Developer and Project Manager names mentioned at 'member exposed filter' of 'search view'.
    $query1 = db_select('users', 'u');
    $query1->fields('u', array('uid', 'name'));
    $query1->join('users_roles', 'ur', 'u.uid = ur.uid');
    $query1->join('role', 'r', 'r.rid = ur.rid');
    $query1->condition('r.name', array('Developer', 'Project Manager'), 'IN');
    $result1 = $query1->execute()->fetchAll();
       
    $rows = array();
    $rows[NULL] = '-Any-';
    // Assign user name to array with value and key for select list.
    foreach ($result1 as $value1) {
      $rows[$value1->name] = $value1->name;
    }

    // Replace textbox exposed filter with select list.
    $form['uid'] = array(
      '#type' => 'select',
      '#options' => $rows,
      '#default_value' => array('-Any-')
    );  

    $query2 = db_select('node', 'n');
    $query2->fields('n', array('title', 'type', 'nid'));
    $query2->condition('n.type', 'project_entry');
    $result2 = $query2->execute()->fetchAll();
    
    $projects = array();
    $projects[NULL] = '-Any-';
    // Assign project name to array with value and key for select list.
    foreach ($result2 as $value2) {
      $projects[$value2->nid] = $value2->title;
    }
    
    // Replace textbox exposed filter with select list.
    $form['field_project_name_target_id'] = array(
      '#type' => 'select',
      '#options' => $projects,
      '#default_value' => array('-Any-')
    ); 
  }
}

/**
 * @desc Form render by Project Manager 'timesheet view' to display checkbox.
 * @param $form.
 * @param $form_state.
 * @param $vars.
 * @return $form.
 * array.
 */
function attach_view_form($form, &$form_state, $vars) {
  $node1 = node_load($vars);

  // Checkbox display as checked or unchecked according to stored value.
  if(isset($node1->field_approvednot_approved[$node1->language][0]['value'])) {
    if($node1->field_approvednot_approved[$node1->language][0]['value'] == 'Approved') {
      $default = 1;     
    }
    elseif ($node1->field_approvednot_approved[$node1->language][0]['value'] == 'Not Approved') {
      $default = 0;      
    }
  }
  else {
    $default = 0;      
  }
    
  // Check timesheet entry invoiced or not.
  $invoice = NULL;
  if(isset($node1->field_invoice[$node1->language][0]['value'])) {
    if($node1->field_invoice[$node1->language][0]['value'] == 'Invoice') {
      $invoice = 1;
    }
  }
    
  // Display checkbox for timesheet entry.
  $form = array();
  $form['replace'] = array(
   '#type' => 'checkbox',
   '#default_value' => $default,
   // Disable checkbox if timesheet entry invoiced.
   '#disabled' => $invoice != NULL ? TRUE : FALSE,
   '#ajax' => array(
     'callback' => 'checkbox_status_change',
     'wrapper' => 'replace-wrapper-id-' . $vars,
     'method' => 'replace',
    ),
    '#prefix' => '<div id="replace-wrapper-id-' .$vars . '">',
    '#suffix' => '</div>',
   );
   // 'Nid' passed for further process.
   $form['node'] = array('#type' => 'hidden', '#value' => $vars);
   return $form;
}

/**
 * @desc Function call through ajax when Project Manager 'timesheet view' checkbox clicked.
 * @param $form.
 * @param $form_state.
 * @return.
 */
function checkbox_status_change(&$form, &$form_state) {
  $vars = node_load($form['node']['#value']);

  if($form_state['values']['replace'] == '1') {     
    $vars->field_approvednot_approved[$vars->language][0]['value'] = 'Approved';
    node_save($vars);     
  }
  elseif ($form_state['values']['replace'] == '0') { 
    if($vars->field_invoice[$vars->language][0]['value'] != 'Invoice') {
      $vars->field_approvednot_approved[$vars->language][0]['value'] = 'Not Approved';
      node_save($vars); 
    }
    else {
      $form['replace']['#attributes'] = array('disabled' => 'disabled', 'checked' => 'checked');
    }
  }
  return $form['replace'];
}
